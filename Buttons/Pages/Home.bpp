view Home {
   type = "body"

   margin = "0"
   padding = "0"

   width = "100vw"
   height = "100vh"

   display = "flex"
   align_items = "center"
   justify_content = "center"
   
   background_color = "rgb(243 244 246)"

   content = Container
}

view Container {
   type = "div"

   width = "100%"

   margin_left = "auto"
   margin_right = "auto"

   padding_top = "4rem"
   padding_bottom = "4rem" 

   content = [ContainerTitle,ContainerBody]
}

view ContainerTitle {
   type = "h1"

   font_size = "1.875rem"
   line_height = "2.25rem"

   text_align = "center"

   font_weight = "700"

   margin_bottom = "1.5rem"

   content = "Button Component (Default)"
}

view ContainerBody {
   type = "div"

   background_color = "rgb(255 255 255)"

   padding_left = "1.5rem"
   padding_right = "1.5rem"

   padding_top = "1rem"
   padding_bottom = "1rem"

   margin_top = "0.75rem"
   margin_bottom = "0.75rem"

   width = "75%"

   margin_left = "auto"
   margin_right = "auto"

   box_shadow = "0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)"

   border_radius = "0.375rem"

   display = "flex"
   align_items = "center"

   content = ButtonsList
}

view ButtonsList {
   type = "div"

   width = "100%"

   text_align = "center"

   margin_left = "auto"
   margin_right = "auto"

   content = [ButtonPrimary,ButtonSuccess,ButtonError,ButtonWarning,ButtonInfo,ButtonDark,ButtonLight]
}

event ButtonFocus {
   outline = "2px solid transparent"
   outline_offset = "2px"
   box_shadow = "0 0 #0000"
}

view Button {
   type = "button"

   border_style = "none"
   border_radius = "0.375rem"

   color = "rgb(255 255 255)"

   padding_left = "1rem"
   padding_right = "1rem" 

   padding_top = "0.5rem" 
   padding_bottom = "0.5rem"

   margin = "0.5rem" 

   transition_property = "color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter"
   transition_timing_function = "linear"
   transition_duration = "500ms"

   user_select = "none"

   onfocus = ButtonFocus
}

event ButtonPrimaryOver {
   background_color = "rgb(79 70 229)"
}

event ButtonPrimaryOut {
   background_color = "rgb(99 102 241)"
}

view ButtonPrimary:Button {
   background_color = "rgb(99 102 241)"

   onmouseover = ButtonPrimaryOver
   onmouseout = ButtonPrimaryOut
   
   content = "Primary"
}

event ButtonSuccessOver {
   background_color = "rgb(21 128 61)"
}

event ButtonSuccessOut {
   background_color = "rgb(34 197 94)"
}

view ButtonSuccess:Button {
   background_color = "rgb(21 128 61)"

   onmouseover = ButtonSuccessOver
   onmouseout = ButtonSuccessOut
   
   content = "Success"
}

event ButtonErrorOver {
   background_color = "rgb(220 38 38)"
}

event ButtonErrorOut {
   background_color = "rgb(239 68 68)"
}

view ButtonError:Button {
   background_color = "rgb(239 68 68)"

   onmouseover = ButtonErrorOver
   onmouseout = ButtonErrorOut
   
   content = "Error"
}

event ButtonWarningOver {
   background_color = "rgb(202 138 4)"
}

event ButtonWarningOut {
   background_color = "rgb(234 179 8)"
}

view ButtonWarning:Button {
   background_color = "rgb(234 179 8)"

   onmouseover = ButtonWarningOver
   onmouseout = ButtonWarningOut
   
   content = "Warning"
}

event ButtonInfoOver {
   background_color = "rgb(13 148 136)"
}

event ButtonInfoOut {
   background_color = "rgb(20 184 166)"
}

view ButtonInfo:Button {
   background_color = "rgb(20 184 166)"

   onmouseover = ButtonInfoOver
   onmouseout = ButtonInfoOut
   
   content = "Info"
}

event ButtonDarkOver {
   background_color = "rgb(31 41 55)"
   cursor= "pointer"
}

event ButtonDarkOut {
   background_color = "rgb(55 65 81)"
}

view ButtonDark:Button {
   background_color = "rgb(55 65 81)"

   onmouseover = ButtonDarkOver
   onmouseout = ButtonDarkOut
   
   content = "Dark"
}

event ButtonLightOver {
   background_color = "rgb(209 213 219)"
   cursor= "pointer"
}

event ButtonLightOut {
   background_color = "rgb(229 231 235)"
}

view ButtonLight:Button {
   background_color = "rgb(229 231 235)"

   onmouseover = ButtonLightOver
   onmouseout = ButtonLightOut
   
   content = "Light"
}